#!/usr/bin/perl

use strict;
use warnings;


eval "use Tk::GtkSettings";
unless ($@) {
	use Tk::GtkSettings qw(export2xrdb initDefaults groupAdd groupMembers groupMembersAdd groupMembersReplace groupOption);
	initDefaults;
	my @txts = groupMembers('content');
	my @newtxts = ('XText');
	while (@txts) {
		my $new = shift @txts;
		push @newtxts, $new unless $new eq 'CodeText';
	}
	groupMembersReplace('content', @newtxts);
	groupAdd('menu');
	groupMembersAdd('menu', 'Menu');
	groupOption('menu', 'relief', 'flat');
	export2xrdb;
}

use Tk;
require Tk::CodeText;
require Tk::Dialog;

my $filename = '';

my $app = MainWindow->new;

$app->protocol('WM_DELETE_WINDOW'=> \&quit);

my $txt = $app->CodeText(
	-font => 'Monospace 12',
)->pack(-expand => 1, -fill => 'both');

$app->configure(-menu => $app->Menu(
	-menuitems => [
		['cascade' => '~File',
			-menuitems => [
				['command' => '~New',
					-command => \&emptyDoc,
# 					-accelerator => '<Control-N>',
				],
				['command' => '~Load',
					-command => \&loadDoc,
# 					-accelerator => '<Control-O>',
				],
				['separator' => '-'],
				['command' => '~Save',
					-command => \&saveDoc,
# 					-accelerator => '<F4>',
				],
				['command' => 'S~ave as',
					-command => \&saveDocAs,
# 					-accelerator => '<Shift-F4>',
				],
				['separator' => '-'],
				['command' => 'E~xit',
					-command => \&quit,
				],
			],
		],
		['cascade' => '~Edit',
			-menuitems => $txt->EditMenuItems
		],
		['cascade' => '~Tools',
			-menuitems => $txt->ViewMenuItems
		],
	],
));

$app->MainLoop;

sub docSaved;
sub emptyDoc;
sub loadDoc;
sub saveDoc;
sub saveDocAs;

sub docSaved {
	if ($txt->editModified) {
		my $msg = $app->Dialog(
			-text => "Text has been modified.\nWould you like to save?",
			-buttons => ['Yes', 'No', 'Cancel'],
		);
		my $but = $msg->Show(-popover => $app);
		if ($but eq 'Yes') {
			return saveDoc
		} elsif ($but eq 'No') {
			return 1
		} else {
			return 0
		}
	}
	return 1;
}

sub emptyDoc {
	if (docSaved) {
		$txt->clear;
		$filename = '';
		return 1
	}
	return 0
}

sub loadDoc {
 	my $file = $app->getOpenFile(
		-popover => 'mainwindow',
	);
	return 0 unless defined $file;
	if ((emptyDoc) and ($txt->load($file))) {
		$filename = $file;
		return 1
	}
	return 0
}

sub saveDoc {
	if ($filename eq '') {
		return saveDocAs;
	}
	return $txt->save($filename);
}

sub saveDocAs {
 	my $file = $app->getSaveFile(
		-popover => 'mainwindow',
	);
	return 0 unless defined $file;
	if ($txt->save($file)) {
		$filename = $file;
		return 1
	}
	return 0
}

sub quit {
	$app->destroy if docSaved
}
